package pojos;
// Generated 02-oct-2014 14:56:35 by Hibernate Tools 4.3.1


import java.util.Objects;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

/**
 * Equivalencia generated by hbm2java
 */
@Entity
@Table(name="equivalencia"
    ,catalog="pfc"
)
public class Equivalencia  implements java.io.Serializable {


     private Integer idequivalencia;
     private Contrato contrato;
     private String visible;
     private GrupoAsignaturaB grupoAsignaturaB;
     private GrupoAsignaturaA grupoAsignaturaA;

    public Equivalencia() {
    }

    public Equivalencia(Contrato contrato, String visible, GrupoAsignaturaB grupoAsignaturaB, GrupoAsignaturaA grupoAsignaturaA) {
       this.contrato = contrato;
       this.visible = visible;
       this.grupoAsignaturaB = grupoAsignaturaB;
       this.grupoAsignaturaA = grupoAsignaturaA;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="idequivalencia", unique=true, nullable=false)
    public Integer getIdequivalencia() {
        return this.idequivalencia;
    }
    
    public void setIdequivalencia(Integer idequivalencia) {
        this.idequivalencia = idequivalencia;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="idContrato")
    public Contrato getContrato() {
        return this.contrato;
    }
    
    public void setContrato(Contrato contrato) {
        this.contrato = contrato;
    }

    
    @Column(name="visible", length=2)
    public String getVisible() {
        return this.visible;
    }
    
    public void setVisible(String visible) {
        this.visible = visible;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="equivalencia")
    public GrupoAsignaturaB getGrupoAsignaturaB() {
        return this.grupoAsignaturaB;
    }
    
    public void setGrupoAsignaturaB(GrupoAsignaturaB grupoAsignaturaB) {
        this.grupoAsignaturaB = grupoAsignaturaB;
    }

@OneToOne(fetch=FetchType.LAZY, mappedBy="equivalencia")
    public GrupoAsignaturaA getGrupoAsignaturaA() {
        return this.grupoAsignaturaA;
    }
    
    public void setGrupoAsignaturaA(GrupoAsignaturaA grupoAsignaturaA) {
        this.grupoAsignaturaA = grupoAsignaturaA;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 37 * hash + Objects.hashCode(this.idequivalencia);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Equivalencia other = (Equivalencia) obj;
        if (!Objects.equals(this.idequivalencia, other.idequivalencia)) {
            return false;
        }
        return true;
    }




}


